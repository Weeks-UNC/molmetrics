name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "main"
      - "new_features"
  pull_request:
    branches:
      - "main"
      - "new_features"
  schedule:
    # Weekly tests run on main by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      # More info on options: https://github.com/marketplace/actions/setup-micromamba
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          environment-name: test
          condarc: |
            channels:
              - conda-forge
          create-args: >-
            python=${{ matrix.python-version }}
        id: setup-micromamba

      # Workaround for micromamba cleanup bug on Linux runners
      - name: Workaround micromamba cleanup bug (Linux)
        if: runner.os == 'Linux'
        run: mkdir -p /home/runner/work/_temp/setup-micromamba/micromamba-shell

      # Workaround for micromamba cleanup bug on macOS runners
      - name: Workaround micromamba cleanup bug (macOS)
        if: runner.os == 'macOS'
        run: mkdir -p /Users/runner/work/_temp/setup-micromamba/micromamba-shell

      # Workaround for micromamba cleanup bug on Windows runners
      - name: Workaround micromamba cleanup bug (Windows)
        if: runner.os == 'Windows'
        run: |
          echo. > C:\Users\runneradmin\.bash_profile

      # Add a step to debug long environment solve times or timeouts
      - name: Show conda info and environment
        shell: bash -l {0}
        run: |
          micromamba info
          micromamba env list
          micromamba list

      - name: Install package
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          micromamba list

      - name: Run tests
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          pytest -v --cov=molmetrics --cov-report=xml --color=yes molmetrics/tests/

      - name: CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
